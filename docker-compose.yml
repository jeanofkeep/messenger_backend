#version: '3.8'

#POSTGRES DB
services:
  db:
    image: postgres:15
    container_name: postgress_db
    ports:
      - "5434:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d messenger"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    #restart: always

#REDIS DB
  #redis:
   # image: redis:latest
    #container_name: redis_db
    #ports:
      #- "6379:6379"
    #volumes:
     # - redis_data:/data


#FASTAPI
  api:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

#NGINX
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

#GRAFANA  
  grafana:
    image: grafana/grafana
    container_name: grafana
    
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=*
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    restart: unless-stopped
    depends_on:
      - prometheus
    #networks:
     # - monitoring_net

#PROMETHEUS
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - postgres-exporter
    restart: unless-stopped
    #networks:
     # - monitoring_net
  
#exporters
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    environment:
       - DATA_SOURCE_NAME=postgresql://user:password@db:5432/messenger?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - db
    restart: unless-stopped

#DATABASE_URL=postgresql://user:password@db:5432/messenger

volumes:
  postgres_data:
  grafana-storage:
  prom_data:

networks:
  default:
    driver: bridge

    #nginx-exporter:
    #image: nginx/nginx-prometheus-exporter:latest
    #command:
     # - '--nginx.scrape-uri=http://nginx:8080/stub_status'
    #depends_on:
     # - nginx
    #restart: unless-stopped